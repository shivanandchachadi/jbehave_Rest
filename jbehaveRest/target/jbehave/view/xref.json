{"xref": {
  "stories": [
    {
      "story": {
        "path": "./stories/SSCS71.story",
        "description": {
          "descriptionAsString": ""
        },
        "narrative": {
          "inOrderTo": "",
          "asA": "",
          "iWantTo": "",
          "soThat": ""
        },
        "meta": {
          "properties": []
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "lifecycle": {
          "before": {
            "steps": [
              []
            ]
          },
          "after": []
        },
        "scenarios": [
          {
            "title": "Adding 100 rows to the empty Bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC01"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|user_id|uri|bins|\r\n|abc123 |D71   |100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "user_id",
                "uri",
                "bins"
              ],
              "data": [
                [
                  [
                    "user_id",
                    "abc123"
                  ],
                  [
                    "uri",
                    "D71"
                  ],
                  [
                    "bins",
                    "100"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC01"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined,there are zero bins defined",
              "When user passes [user_id],room_id and number of [bins] to add as 100",
              "Then the system will insert 100 rows/bins into the BIN table",
              "And pass a message back indicating that 100 bins/rows are defined"
            ]
          },
          {
            "title": "Updating X rows to the existing Bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC02"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http:// |abc123 |20  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "20"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC02"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
              "When user passes user_id, room_id and number of bins to add as x number",
              "Then the system will insert X rows into the BIN table starting with Bin 11",
              "And pass a message back indicating that 10+x number of bins are defined"
            ]
          },
          {
            "title": "Verify that user adding less than 1 bin",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC03"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |0   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "0"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC03"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room [uri]information is defined",
              "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
              "Then the system will not insert any rows into the BIN table",
              "And pass a error message back saying that number of bins to add must be a number greater than zero."
            ]
          },
          {
            "title": "Verify user-id is required to create bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC04"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bin|\r\n|http://|abh123|20|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bin"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abh123"
                  ],
                  [
                    "bin",
                    "20"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC04"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room [uri]details is defined",
              "When user doesn't pass a user_id but every other input data [bin]",
              "Then the system will not insert any input data into the BIN table",
              "And pass a error message back saying that user_id is required"
            ]
          },
          {
            "title": "Verifying for invalid room_id",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC05"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bin|\r\n\r\n|http://|abc123 |30|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bin"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bin",
                    "30"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC05"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a user storage location[uri] room details",
              "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
              "Then the system will not add any rows into the BIN table",
              "And pass a error message back saying that a valid room_id is required"
            ]
          },
          {
            "title": "Verify by adding more than 100 bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC06"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |20|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "20"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC06"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined",
              "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
              "Then the system will not insert rows into the BIN table",
              "And pass an error message back saying bins to add can not be greater than 100 bins at a time."
            ]
          }
        ],
        "name": "SSCS71.story"
      },
      "localizedNarrative": "As a \nI want to \nSo that ",
      "allowed": true,
      "status": "PENDING",
      "givenStories": [],
      "scenarios": [
        {
          "scenario": {
            "title": "Adding 100 rows to the empty Bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC01"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|user_id|uri|bins|\r\n|abc123 |D71   |100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "user_id",
                "uri",
                "bins"
              ],
              "data": [
                [
                  [
                    "user_id",
                    "abc123"
                  ],
                  [
                    "uri",
                    "D71"
                  ],
                  [
                    "bins",
                    "100"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC01"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined,there are zero bins defined",
              "When user passes [user_id],room_id and number of [bins] to add as 100",
              "Then the system will insert 100 rows/bins into the BIN table",
              "And pass a message back indicating that 100 bins/rows are defined"
            ]
          },
          "storyPath": "./stories/SSCS71.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "user_id",
                  "abc123"
                ],
                [
                  "uri",
                  "D71"
                ],
                [
                  "bins",
                  "100"
                ],
                [
                  "RestAPI",
                  ""
                ],
                [
                  "acceptance",
                  ""
                ],
                [
                  "automatedBy",
                  "BH09098"
                ],
                [
                  "automation",
                  ""
                ],
                [
                  "id",
                  "SSCS-71-SC01"
                ],
                [
                  "moduleName",
                  "SF"
                ],
                [
                  "productName",
                  "MMS"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given a Storage Location room[uri] is defined,there are zero bins defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Given a Storage Location room[uri] is defined,there are zero bins defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "5dd6057e-3b2e-442b-9e58-f11423ac8355"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When user passes [user_id],room_id and number of [bins] to add as 100",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "When user passes [user_id],room_id and number of [bins] to add as 100",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "e54def38-cfad-47ca-881d-692106f99ce4"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the system will insert 100 rows/bins into the BIN table",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Then the system will insert 100 rows/bins into the BIN table",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "9299d6bc-f858-40fb-ab33-17f607ed46d2"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And pass a message back indicating that 100 bins/rows are defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "And pass a message back indicating that 100 bins/rows are defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "1ba05789-3006-4cc4-85c5-c3b0097afcb4"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": [
                  {
                    "@name": "automation",
                    "@value": ""
                  },
                  {
                    "@name": "acceptance",
                    "@value": ""
                  },
                  {
                    "@name": "moduleName",
                    "@value": "SF"
                  },
                  {
                    "@name": "RestAPI",
                    "@value": ""
                  },
                  {
                    "@name": "productName",
                    "@value": "MMS"
                  },
                  {
                    "@name": "automatedBy",
                    "@value": "BH09098"
                  },
                  {
                    "@name": "id",
                    "@value": "SSCS-71-SC01"
                  }
                ]
              },
              "scenario": {
                "title": "Adding 100 rows to the empty Bins",
                "meta": {
                  "properties": [
                    {
                      "@name": "automation",
                      "@value": ""
                    },
                    {
                      "@name": "acceptance",
                      "@value": ""
                    },
                    {
                      "@name": "moduleName",
                      "@value": "SF"
                    },
                    {
                      "@name": "RestAPI",
                      "@value": ""
                    },
                    {
                      "@name": "automatedBy",
                      "@value": "BH09098"
                    },
                    {
                      "@name": "productName",
                      "@value": "MMS"
                    },
                    {
                      "@name": "id",
                      "@value": "SSCS-71-SC01"
                    }
                  ]
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|user_id|uri|bins|\r\n|abc123 |D71   |100 |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "user_id",
                    "uri",
                    "bins"
                  ],
                  "data": [
                    [
                      [
                        "user_id",
                        "abc123"
                      ],
                      [
                        "uri",
                        "D71"
                      ],
                      [
                        "bins",
                        "100"
                      ],
                      [
                        "RestAPI",
                        ""
                      ],
                      [
                        "acceptance",
                        ""
                      ],
                      [
                        "automatedBy",
                        "BH09098"
                      ],
                      [
                        "automation",
                        ""
                      ],
                      [
                        "id",
                        "SSCS-71-SC01"
                      ],
                      [
                        "moduleName",
                        "SF"
                      ],
                      [
                        "productName",
                        "MMS"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given a Storage Location room[uri] is defined,there are zero bins defined",
                  "When user passes [user_id],room_id and number of [bins] to add as 100",
                  "Then the system will insert 100 rows/bins into the BIN table",
                  "And pass a message back indicating that 100 bins/rows are defined"
                ]
              }
            }
          ],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "Updating X rows to the existing Bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC02"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http:// |abc123 |20  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "20"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC02"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
              "When user passes user_id, room_id and number of bins to add as x number",
              "Then the system will insert X rows into the BIN table starting with Bin 11",
              "And pass a message back indicating that 10+x number of bins are defined"
            ]
          },
          "storyPath": "./stories/SSCS71.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "uri",
                  "http://"
                ],
                [
                  "User_ID",
                  "abc123"
                ],
                [
                  "bins",
                  "20"
                ],
                [
                  "DB",
                  "Validation"
                ],
                [
                  "acceptance",
                  ""
                ],
                [
                  "automatedBy",
                  "BH09098"
                ],
                [
                  "automation",
                  ""
                ],
                [
                  "id",
                  "SSCS-71-SC02"
                ],
                [
                  "moduleName",
                  "SF"
                ],
                [
                  "productName",
                  "MMS"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "caf13da0-5767-4b62-a7de-1ac85b78c90a"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When user passes user_id, room_id and number of bins to add as x number",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "When user passes user_id, room_id and number of bins to add as x number",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "f868498b-35ed-4ffd-b750-77a79caf6279"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the system will insert X rows into the BIN table starting with Bin 11",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Then the system will insert X rows into the BIN table starting with Bin 11",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "04829707-438d-4b6f-8446-b53cb974fc36"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And pass a message back indicating that 10+x number of bins are defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "And pass a message back indicating that 10+x number of bins are defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "a162e89a-ed53-4c7b-bebf-f51088c1e9ef"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": [
                  {
                    "@name": "automation",
                    "@value": ""
                  },
                  {
                    "@name": "acceptance",
                    "@value": ""
                  },
                  {
                    "@name": "DB",
                    "@value": "Validation"
                  },
                  {
                    "@name": "moduleName",
                    "@value": "SF"
                  },
                  {
                    "@name": "productName",
                    "@value": "MMS"
                  },
                  {
                    "@name": "automatedBy",
                    "@value": "BH09098"
                  },
                  {
                    "@name": "id",
                    "@value": "SSCS-71-SC02"
                  }
                ]
              },
              "scenario": {
                "title": "Updating X rows to the existing Bins",
                "meta": {
                  "properties": [
                    {
                      "@name": "automation",
                      "@value": ""
                    },
                    {
                      "@name": "acceptance",
                      "@value": ""
                    },
                    {
                      "@name": "moduleName",
                      "@value": "SF"
                    },
                    {
                      "@name": "DB",
                      "@value": "Validation"
                    },
                    {
                      "@name": "automatedBy",
                      "@value": "BH09098"
                    },
                    {
                      "@name": "productName",
                      "@value": "MMS"
                    },
                    {
                      "@name": "id",
                      "@value": "SSCS-71-SC02"
                    }
                  ]
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|uri|User_ID|bins|\r\n|http:// |abc123 |20  |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "uri",
                    "User_ID",
                    "bins"
                  ],
                  "data": [
                    [
                      [
                        "uri",
                        "http://"
                      ],
                      [
                        "User_ID",
                        "abc123"
                      ],
                      [
                        "bins",
                        "20"
                      ],
                      [
                        "DB",
                        "Validation"
                      ],
                      [
                        "acceptance",
                        ""
                      ],
                      [
                        "automatedBy",
                        "BH09098"
                      ],
                      [
                        "automation",
                        ""
                      ],
                      [
                        "id",
                        "SSCS-71-SC02"
                      ],
                      [
                        "moduleName",
                        "SF"
                      ],
                      [
                        "productName",
                        "MMS"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
                  "When user passes user_id, room_id and number of bins to add as x number",
                  "Then the system will insert X rows into the BIN table starting with Bin 11",
                  "And pass a message back indicating that 10+x number of bins are defined"
                ]
              }
            }
          ],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "Verify that user adding less than 1 bin",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC03"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |0   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "0"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC03"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room [uri]information is defined",
              "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
              "Then the system will not insert any rows into the BIN table",
              "And pass a error message back saying that number of bins to add must be a number greater than zero."
            ]
          },
          "storyPath": "./stories/SSCS71.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "uri",
                  "http://"
                ],
                [
                  "User_ID",
                  "abc123"
                ],
                [
                  "bins",
                  "0"
                ],
                [
                  "DB",
                  "Validation"
                ],
                [
                  "acceptance",
                  ""
                ],
                [
                  "automatedBy",
                  "BH09098"
                ],
                [
                  "automation",
                  ""
                ],
                [
                  "id",
                  "SSCS-71-SC03"
                ],
                [
                  "moduleName",
                  "SF"
                ],
                [
                  "productName",
                  "MMS"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given a Storage Location room [uri]information is defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Given a Storage Location room [uri]information is defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "4566b3d5-cfc8-4654-9eb6-a19ee7579777"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "a9abe884-6ddf-438e-a9cc-e029786c304f"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the system will not insert any rows into the BIN table",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Then the system will not insert any rows into the BIN table",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "32d55223-541d-438d-b906-074c263bd79b"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And pass a error message back saying that number of bins to add must be a number greater than zero.",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "And pass a error message back saying that number of bins to add must be a number greater than zero.",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "d81a7391-0e9b-4a76-86a8-db7646e98f82"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": [
                  {
                    "@name": "automation",
                    "@value": ""
                  },
                  {
                    "@name": "acceptance",
                    "@value": ""
                  },
                  {
                    "@name": "DB",
                    "@value": "Validation"
                  },
                  {
                    "@name": "moduleName",
                    "@value": "SF"
                  },
                  {
                    "@name": "productName",
                    "@value": "MMS"
                  },
                  {
                    "@name": "automatedBy",
                    "@value": "BH09098"
                  },
                  {
                    "@name": "id",
                    "@value": "SSCS-71-SC03"
                  }
                ]
              },
              "scenario": {
                "title": "Verify that user adding less than 1 bin",
                "meta": {
                  "properties": [
                    {
                      "@name": "automation",
                      "@value": ""
                    },
                    {
                      "@name": "acceptance",
                      "@value": ""
                    },
                    {
                      "@name": "moduleName",
                      "@value": "SF"
                    },
                    {
                      "@name": "DB",
                      "@value": "Validation"
                    },
                    {
                      "@name": "automatedBy",
                      "@value": "BH09098"
                    },
                    {
                      "@name": "productName",
                      "@value": "MMS"
                    },
                    {
                      "@name": "id",
                      "@value": "SSCS-71-SC03"
                    }
                  ]
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |0   |",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "uri",
                    "User_ID",
                    "bins"
                  ],
                  "data": [
                    [
                      [
                        "uri",
                        "http://"
                      ],
                      [
                        "User_ID",
                        "abc123"
                      ],
                      [
                        "bins",
                        "0"
                      ],
                      [
                        "DB",
                        "Validation"
                      ],
                      [
                        "acceptance",
                        ""
                      ],
                      [
                        "automatedBy",
                        "BH09098"
                      ],
                      [
                        "automation",
                        ""
                      ],
                      [
                        "id",
                        "SSCS-71-SC03"
                      ],
                      [
                        "moduleName",
                        "SF"
                      ],
                      [
                        "productName",
                        "MMS"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given a Storage Location room [uri]information is defined",
                  "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
                  "Then the system will not insert any rows into the BIN table",
                  "And pass a error message back saying that number of bins to add must be a number greater than zero."
                ]
              }
            }
          ],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "Verify user-id is required to create bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC04"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bin|\r\n|http://|abh123|20|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bin"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abh123"
                  ],
                  [
                    "bin",
                    "20"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC04"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room [uri]details is defined",
              "When user doesn't pass a user_id but every other input data [bin]",
              "Then the system will not insert any input data into the BIN table",
              "And pass a error message back saying that user_id is required"
            ]
          },
          "storyPath": "./stories/SSCS71.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "uri",
                  "http://"
                ],
                [
                  "User_ID",
                  "abh123"
                ],
                [
                  "bin",
                  "20"
                ],
                [
                  "DB",
                  "Validation"
                ],
                [
                  "acceptance",
                  ""
                ],
                [
                  "automatedBy",
                  "BH09098"
                ],
                [
                  "automation",
                  ""
                ],
                [
                  "id",
                  "SSCS-71-SC04"
                ],
                [
                  "moduleName",
                  "SF"
                ],
                [
                  "productName",
                  "MMS"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given a Storage Location room [uri]details is defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Given a Storage Location room [uri]details is defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "b85e9641-06f3-4183-b107-975bc0c2dbc6"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When user doesn't pass a user_id but every other input data [bin]",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "When user doesn't pass a user_id but every other input data [bin]",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "dd71373a-5f55-46d2-8d95-f75886c4e149"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the system will not insert any input data into the BIN table",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Then the system will not insert any input data into the BIN table",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "4881dcd7-4da8-41e4-a0f5-2f9eaf3fee6f"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And pass a error message back saying that user_id is required",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "And pass a error message back saying that user_id is required",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "4eda0a0d-ffb3-4184-9ce6-9a1e99767bad"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": [
                  {
                    "@name": "automation",
                    "@value": ""
                  },
                  {
                    "@name": "acceptance",
                    "@value": ""
                  },
                  {
                    "@name": "DB",
                    "@value": "Validation"
                  },
                  {
                    "@name": "moduleName",
                    "@value": "SF"
                  },
                  {
                    "@name": "productName",
                    "@value": "MMS"
                  },
                  {
                    "@name": "automatedBy",
                    "@value": "BH09098"
                  },
                  {
                    "@name": "id",
                    "@value": "SSCS-71-SC04"
                  }
                ]
              },
              "scenario": {
                "title": "Verify user-id is required to create bins",
                "meta": {
                  "properties": [
                    {
                      "@name": "automation",
                      "@value": ""
                    },
                    {
                      "@name": "acceptance",
                      "@value": ""
                    },
                    {
                      "@name": "moduleName",
                      "@value": "SF"
                    },
                    {
                      "@name": "DB",
                      "@value": "Validation"
                    },
                    {
                      "@name": "automatedBy",
                      "@value": "BH09098"
                    },
                    {
                      "@name": "productName",
                      "@value": "MMS"
                    },
                    {
                      "@name": "id",
                      "@value": "SSCS-71-SC04"
                    }
                  ]
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|uri|User_ID|bin|\r\n|http://|abh123|20|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "uri",
                    "User_ID",
                    "bin"
                  ],
                  "data": [
                    [
                      [
                        "uri",
                        "http://"
                      ],
                      [
                        "User_ID",
                        "abh123"
                      ],
                      [
                        "bin",
                        "20"
                      ],
                      [
                        "DB",
                        "Validation"
                      ],
                      [
                        "acceptance",
                        ""
                      ],
                      [
                        "automatedBy",
                        "BH09098"
                      ],
                      [
                        "automation",
                        ""
                      ],
                      [
                        "id",
                        "SSCS-71-SC04"
                      ],
                      [
                        "moduleName",
                        "SF"
                      ],
                      [
                        "productName",
                        "MMS"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given a Storage Location room [uri]details is defined",
                  "When user doesn't pass a user_id but every other input data [bin]",
                  "Then the system will not insert any input data into the BIN table",
                  "And pass a error message back saying that user_id is required"
                ]
              }
            }
          ],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "Verifying for invalid room_id",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC05"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bin|\r\n\r\n|http://|abc123 |30|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bin"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bin",
                    "30"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC05"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a user storage location[uri] room details",
              "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
              "Then the system will not add any rows into the BIN table",
              "And pass a error message back saying that a valid room_id is required"
            ]
          },
          "storyPath": "./stories/SSCS71.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "uri",
                  "http://"
                ],
                [
                  "User_ID",
                  "abc123"
                ],
                [
                  "bin",
                  "30"
                ],
                [
                  "RestAPI",
                  ""
                ],
                [
                  "acceptance",
                  ""
                ],
                [
                  "automatedBy",
                  "BH09098"
                ],
                [
                  "automation",
                  ""
                ],
                [
                  "id",
                  "SSCS-71-SC05"
                ],
                [
                  "moduleName",
                  "SF"
                ],
                [
                  "productName",
                  "MMS"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given a user storage location[uri] room details",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Given a user storage location[uri] room details",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "a02de12e-5718-4384-b0ea-0d54404cbc4f"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "16a5ba4e-145a-442f-a57b-c728ac309260"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the system will not add any rows into the BIN table",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Then the system will not add any rows into the BIN table",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "11dda41b-59c2-476b-a74e-9371fe46f8be"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And pass a error message back saying that a valid room_id is required",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "And pass a error message back saying that a valid room_id is required",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "a33da068-e6c9-40c7-82b8-1df2aa6792c9"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": [
                  {
                    "@name": "automation",
                    "@value": ""
                  },
                  {
                    "@name": "acceptance",
                    "@value": ""
                  },
                  {
                    "@name": "moduleName",
                    "@value": "SF"
                  },
                  {
                    "@name": "RestAPI",
                    "@value": ""
                  },
                  {
                    "@name": "productName",
                    "@value": "MMS"
                  },
                  {
                    "@name": "automatedBy",
                    "@value": "BH09098"
                  },
                  {
                    "@name": "id",
                    "@value": "SSCS-71-SC05"
                  }
                ]
              },
              "scenario": {
                "title": "Verifying for invalid room_id",
                "meta": {
                  "properties": [
                    {
                      "@name": "automation",
                      "@value": ""
                    },
                    {
                      "@name": "acceptance",
                      "@value": ""
                    },
                    {
                      "@name": "moduleName",
                      "@value": "SF"
                    },
                    {
                      "@name": "RestAPI",
                      "@value": ""
                    },
                    {
                      "@name": "automatedBy",
                      "@value": "BH09098"
                    },
                    {
                      "@name": "productName",
                      "@value": "MMS"
                    },
                    {
                      "@name": "id",
                      "@value": "SSCS-71-SC05"
                    }
                  ]
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|uri|User_ID|bin|\r\n\r\n|http://|abc123 |30|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "uri",
                    "User_ID",
                    "bin"
                  ],
                  "data": [
                    [
                      [
                        "uri",
                        "http://"
                      ],
                      [
                        "User_ID",
                        "abc123"
                      ],
                      [
                        "bin",
                        "30"
                      ],
                      [
                        "RestAPI",
                        ""
                      ],
                      [
                        "acceptance",
                        ""
                      ],
                      [
                        "automatedBy",
                        "BH09098"
                      ],
                      [
                        "automation",
                        ""
                      ],
                      [
                        "id",
                        "SSCS-71-SC05"
                      ],
                      [
                        "moduleName",
                        "SF"
                      ],
                      [
                        "productName",
                        "MMS"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given a user storage location[uri] room details",
                  "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
                  "Then the system will not add any rows into the BIN table",
                  "And pass a error message back saying that a valid room_id is required"
                ]
              }
            }
          ],
          "status": "PENDING"
        },
        {
          "scenario": {
            "title": "Verify by adding more than 100 bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC06"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |20|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "20"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC06"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined",
              "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
              "Then the system will not insert rows into the BIN table",
              "And pass an error message back saying bins to add can not be greater than 100 bins at a time."
            ]
          },
          "storyPath": "./stories/SSCS71.story",
          "allowed": true,
          "examplePerformableScenarios": [
            {
              "parameters": [
                [
                  "uri",
                  "http://"
                ],
                [
                  "User_ID",
                  "abc123"
                ],
                [
                  "bins",
                  "20"
                ],
                [
                  "RestAPI",
                  ""
                ],
                [
                  "acceptance",
                  ""
                ],
                [
                  "automatedBy",
                  "BH09098"
                ],
                [
                  "automation",
                  ""
                ],
                [
                  "id",
                  "SSCS-71-SC06"
                ],
                [
                  "moduleName",
                  "SF"
                ],
                [
                  "productName",
                  "MMS"
                ]
              ],
              "givenStories": [],
              "beforeSteps": {
                "matches": []
              },
              "steps": {
                "matches": [],
                "results": [
                  {
                    "step": "Given a Storage Location room[uri] is defined",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Given a Storage Location room[uri] is defined",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                        "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "c0fa4331-883c-48c3-90f9-0002679e927c"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "5a6cf2f2-6f60-44e1-9632-9c0178dacc67"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "Then the system will not insert rows into the BIN table",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "Then the system will not insert rows into the BIN table",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "c9fa5de6-605c-46cf-997b-e277930ad827"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  },
                  {
                    "step": "And pass an error message back saying bins to add can not be greater than 100 bins at a time.",
                    "type": "PENDING",
                    "throwable": {
                      "@class": "org.jbehave.core.failures.PendingStepFound",
                      "detailMessage": "And pass an error message back saying bins to add can not be greater than 100 bins at a time.",
                      "stackTrace": [
                        "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                        "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                        "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                        "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                        "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                        "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                        "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                        "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                        "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                        "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                        "java.util.concurrent.FutureTask.run(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                        "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                        "java.lang.Thread.run(Unknown Source)"
                      ],
                      "suppressedExceptions": [
                        [],
                        []
                      ],
                      "uuid": "7f77ee5d-e174-4c27-a98d-964075f7ca7a"
                    },
                    "durationInMillis": 0,
                    "start": 0,
                    "end": 0
                  }
                ]
              },
              "afterSteps": {
                "matches": []
              },
              "storyAndScenarioMeta": {
                "properties": [
                  {
                    "@name": "automation",
                    "@value": ""
                  },
                  {
                    "@name": "acceptance",
                    "@value": ""
                  },
                  {
                    "@name": "moduleName",
                    "@value": "SF"
                  },
                  {
                    "@name": "RestAPI",
                    "@value": ""
                  },
                  {
                    "@name": "productName",
                    "@value": "MMS"
                  },
                  {
                    "@name": "automatedBy",
                    "@value": "BH09098"
                  },
                  {
                    "@name": "id",
                    "@value": "SSCS-71-SC06"
                  }
                ]
              },
              "scenario": {
                "title": "Verify by adding more than 100 bins",
                "meta": {
                  "properties": [
                    {
                      "@name": "automation",
                      "@value": ""
                    },
                    {
                      "@name": "acceptance",
                      "@value": ""
                    },
                    {
                      "@name": "moduleName",
                      "@value": "SF"
                    },
                    {
                      "@name": "RestAPI",
                      "@value": ""
                    },
                    {
                      "@name": "automatedBy",
                      "@value": "BH09098"
                    },
                    {
                      "@name": "productName",
                      "@value": "MMS"
                    },
                    {
                      "@name": "id",
                      "@value": "SSCS-71-SC06"
                    }
                  ]
                },
                "givenStories": {
                  "givenStories": [],
                  "givenStoriesAsString": "",
                  "examplesTable": {
                    "tableAsString": "",
                    "headerSeparator": "|",
                    "valueSeparator": "|",
                    "ignorableSeparator": "|--",
                    "tableTransformers": {
                      "transformers": [
                        [
                          "FORMATTING",
                          {}
                        ],
                        [
                          "REPLACING",
                          {}
                        ],
                        [
                          "FROM_LANDSCAPE",
                          {}
                        ]
                      ]
                    },
                    "headers": [],
                    "data": [],
                    "properties": [
                      {
                        "@name": "headerSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "valueSeparator",
                        "@value": "|"
                      },
                      {
                        "@name": "ignorableSeparator",
                        "@value": "|--"
                      }
                    ],
                    "propertiesAsString": "",
                    "namedParameters": [],
                    "trim": true
                  }
                },
                "examplesTable": {
                  "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |20|",
                  "headerSeparator": "|",
                  "valueSeparator": "|",
                  "ignorableSeparator": "|--",
                  "tableTransformers": {
                    "transformers": [
                      [
                        "FORMATTING",
                        {}
                      ],
                      [
                        "REPLACING",
                        {}
                      ],
                      [
                        "FROM_LANDSCAPE",
                        {}
                      ]
                    ]
                  },
                  "headers": [
                    "uri",
                    "User_ID",
                    "bins"
                  ],
                  "data": [
                    [
                      [
                        "uri",
                        "http://"
                      ],
                      [
                        "User_ID",
                        "abc123"
                      ],
                      [
                        "bins",
                        "20"
                      ],
                      [
                        "RestAPI",
                        ""
                      ],
                      [
                        "acceptance",
                        ""
                      ],
                      [
                        "automatedBy",
                        "BH09098"
                      ],
                      [
                        "automation",
                        ""
                      ],
                      [
                        "id",
                        "SSCS-71-SC06"
                      ],
                      [
                        "moduleName",
                        "SF"
                      ],
                      [
                        "productName",
                        "MMS"
                      ]
                    ]
                  ],
                  "properties": [
                    {
                      "@name": "headerSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "valueSeparator",
                      "@value": "|"
                    },
                    {
                      "@name": "ignorableSeparator",
                      "@value": "|--"
                    }
                  ],
                  "propertiesAsString": "",
                  "namedParameters": [],
                  "trim": true
                },
                "steps": [
                  "Given a Storage Location room[uri] is defined",
                  "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
                  "Then the system will not insert rows into the BIN table",
                  "And pass an error message back saying bins to add can not be greater than 100 bins at a time."
                ]
              }
            }
          ],
          "status": "PENDING"
        }
      ],
      "beforeSteps": {},
      "afterSteps": {},
      "timing": {
        "durationInMillis": 2015,
        "start": 1563526764657,
        "end": 1563526766672
      },
      "givenStory": false
    }
  ],
  "scenarios": [
    {
      "scenario": {
        "title": "Adding 100 rows to the empty Bins",
        "meta": {
          "properties": [
            {
              "@name": "automation",
              "@value": ""
            },
            {
              "@name": "acceptance",
              "@value": ""
            },
            {
              "@name": "moduleName",
              "@value": "SF"
            },
            {
              "@name": "RestAPI",
              "@value": ""
            },
            {
              "@name": "automatedBy",
              "@value": "BH09098"
            },
            {
              "@name": "productName",
              "@value": "MMS"
            },
            {
              "@name": "id",
              "@value": "SSCS-71-SC01"
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|user_id|uri|bins|\r\n|abc123 |D71   |100 |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "user_id",
            "uri",
            "bins"
          ],
          "data": [
            [
              [
                "user_id",
                "abc123"
              ],
              [
                "uri",
                "D71"
              ],
              [
                "bins",
                "100"
              ],
              [
                "RestAPI",
                ""
              ],
              [
                "acceptance",
                ""
              ],
              [
                "automatedBy",
                "BH09098"
              ],
              [
                "automation",
                ""
              ],
              [
                "id",
                "SSCS-71-SC01"
              ],
              [
                "moduleName",
                "SF"
              ],
              [
                "productName",
                "MMS"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given a Storage Location room[uri] is defined,there are zero bins defined",
          "When user passes [user_id],room_id and number of [bins] to add as 100",
          "Then the system will insert 100 rows/bins into the BIN table",
          "And pass a message back indicating that 100 bins/rows are defined"
        ]
      },
      "storyPath": "./stories/SSCS71.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "user_id",
              "abc123"
            ],
            [
              "uri",
              "D71"
            ],
            [
              "bins",
              "100"
            ],
            [
              "RestAPI",
              ""
            ],
            [
              "acceptance",
              ""
            ],
            [
              "automatedBy",
              "BH09098"
            ],
            [
              "automation",
              ""
            ],
            [
              "id",
              "SSCS-71-SC01"
            ],
            [
              "moduleName",
              "SF"
            ],
            [
              "productName",
              "MMS"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given a Storage Location room[uri] is defined,there are zero bins defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a Storage Location room[uri] is defined,there are zero bins defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "5dd6057e-3b2e-442b-9e58-f11423ac8355"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When user passes [user_id],room_id and number of [bins] to add as 100",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When user passes [user_id],room_id and number of [bins] to add as 100",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "e54def38-cfad-47ca-881d-692106f99ce4"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the system will insert 100 rows/bins into the BIN table",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the system will insert 100 rows/bins into the BIN table",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "9299d6bc-f858-40fb-ab33-17f607ed46d2"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And pass a message back indicating that 100 bins/rows are defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "And pass a message back indicating that 100 bins/rows are defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "1ba05789-3006-4cc4-85c5-c3b0097afcb4"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": [
              {
                "@name": "automation",
                "@value": ""
              },
              {
                "@name": "acceptance",
                "@value": ""
              },
              {
                "@name": "moduleName",
                "@value": "SF"
              },
              {
                "@name": "RestAPI",
                "@value": ""
              },
              {
                "@name": "productName",
                "@value": "MMS"
              },
              {
                "@name": "automatedBy",
                "@value": "BH09098"
              },
              {
                "@name": "id",
                "@value": "SSCS-71-SC01"
              }
            ]
          },
          "scenario": {
            "title": "Adding 100 rows to the empty Bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC01"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|user_id|uri|bins|\r\n|abc123 |D71   |100 |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "user_id",
                "uri",
                "bins"
              ],
              "data": [
                [
                  [
                    "user_id",
                    "abc123"
                  ],
                  [
                    "uri",
                    "D71"
                  ],
                  [
                    "bins",
                    "100"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC01"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined,there are zero bins defined",
              "When user passes [user_id],room_id and number of [bins] to add as 100",
              "Then the system will insert 100 rows/bins into the BIN table",
              "And pass a message back indicating that 100 bins/rows are defined"
            ]
          }
        }
      ],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "Updating X rows to the existing Bins",
        "meta": {
          "properties": [
            {
              "@name": "automation",
              "@value": ""
            },
            {
              "@name": "acceptance",
              "@value": ""
            },
            {
              "@name": "moduleName",
              "@value": "SF"
            },
            {
              "@name": "DB",
              "@value": "Validation"
            },
            {
              "@name": "automatedBy",
              "@value": "BH09098"
            },
            {
              "@name": "productName",
              "@value": "MMS"
            },
            {
              "@name": "id",
              "@value": "SSCS-71-SC02"
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|uri|User_ID|bins|\r\n|http:// |abc123 |20  |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "uri",
            "User_ID",
            "bins"
          ],
          "data": [
            [
              [
                "uri",
                "http://"
              ],
              [
                "User_ID",
                "abc123"
              ],
              [
                "bins",
                "20"
              ],
              [
                "DB",
                "Validation"
              ],
              [
                "acceptance",
                ""
              ],
              [
                "automatedBy",
                "BH09098"
              ],
              [
                "automation",
                ""
              ],
              [
                "id",
                "SSCS-71-SC02"
              ],
              [
                "moduleName",
                "SF"
              ],
              [
                "productName",
                "MMS"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
          "When user passes user_id, room_id and number of bins to add as x number",
          "Then the system will insert X rows into the BIN table starting with Bin 11",
          "And pass a message back indicating that 10+x number of bins are defined"
        ]
      },
      "storyPath": "./stories/SSCS71.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "uri",
              "http://"
            ],
            [
              "User_ID",
              "abc123"
            ],
            [
              "bins",
              "20"
            ],
            [
              "DB",
              "Validation"
            ],
            [
              "acceptance",
              ""
            ],
            [
              "automatedBy",
              "BH09098"
            ],
            [
              "automation",
              ""
            ],
            [
              "id",
              "SSCS-71-SC02"
            ],
            [
              "moduleName",
              "SF"
            ],
            [
              "productName",
              "MMS"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "caf13da0-5767-4b62-a7de-1ac85b78c90a"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When user passes user_id, room_id and number of bins to add as x number",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When user passes user_id, room_id and number of bins to add as x number",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "f868498b-35ed-4ffd-b750-77a79caf6279"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the system will insert X rows into the BIN table starting with Bin 11",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the system will insert X rows into the BIN table starting with Bin 11",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "04829707-438d-4b6f-8446-b53cb974fc36"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And pass a message back indicating that 10+x number of bins are defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "And pass a message back indicating that 10+x number of bins are defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "a162e89a-ed53-4c7b-bebf-f51088c1e9ef"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": [
              {
                "@name": "automation",
                "@value": ""
              },
              {
                "@name": "acceptance",
                "@value": ""
              },
              {
                "@name": "DB",
                "@value": "Validation"
              },
              {
                "@name": "moduleName",
                "@value": "SF"
              },
              {
                "@name": "productName",
                "@value": "MMS"
              },
              {
                "@name": "automatedBy",
                "@value": "BH09098"
              },
              {
                "@name": "id",
                "@value": "SSCS-71-SC02"
              }
            ]
          },
          "scenario": {
            "title": "Updating X rows to the existing Bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC02"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http:// |abc123 |20  |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "20"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC02"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined,there are bins 1 through 10 defined",
              "When user passes user_id, room_id and number of bins to add as x number",
              "Then the system will insert X rows into the BIN table starting with Bin 11",
              "And pass a message back indicating that 10+x number of bins are defined"
            ]
          }
        }
      ],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "Verify that user adding less than 1 bin",
        "meta": {
          "properties": [
            {
              "@name": "automation",
              "@value": ""
            },
            {
              "@name": "acceptance",
              "@value": ""
            },
            {
              "@name": "moduleName",
              "@value": "SF"
            },
            {
              "@name": "DB",
              "@value": "Validation"
            },
            {
              "@name": "automatedBy",
              "@value": "BH09098"
            },
            {
              "@name": "productName",
              "@value": "MMS"
            },
            {
              "@name": "id",
              "@value": "SSCS-71-SC03"
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |0   |",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "uri",
            "User_ID",
            "bins"
          ],
          "data": [
            [
              [
                "uri",
                "http://"
              ],
              [
                "User_ID",
                "abc123"
              ],
              [
                "bins",
                "0"
              ],
              [
                "DB",
                "Validation"
              ],
              [
                "acceptance",
                ""
              ],
              [
                "automatedBy",
                "BH09098"
              ],
              [
                "automation",
                ""
              ],
              [
                "id",
                "SSCS-71-SC03"
              ],
              [
                "moduleName",
                "SF"
              ],
              [
                "productName",
                "MMS"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given a Storage Location room [uri]information is defined",
          "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
          "Then the system will not insert any rows into the BIN table",
          "And pass a error message back saying that number of bins to add must be a number greater than zero."
        ]
      },
      "storyPath": "./stories/SSCS71.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "uri",
              "http://"
            ],
            [
              "User_ID",
              "abc123"
            ],
            [
              "bins",
              "0"
            ],
            [
              "DB",
              "Validation"
            ],
            [
              "acceptance",
              ""
            ],
            [
              "automatedBy",
              "BH09098"
            ],
            [
              "automation",
              ""
            ],
            [
              "id",
              "SSCS-71-SC03"
            ],
            [
              "moduleName",
              "SF"
            ],
            [
              "productName",
              "MMS"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given a Storage Location room [uri]information is defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a Storage Location room [uri]information is defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "4566b3d5-cfc8-4654-9eb6-a19ee7579777"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "a9abe884-6ddf-438e-a9cc-e029786c304f"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the system will not insert any rows into the BIN table",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the system will not insert any rows into the BIN table",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "32d55223-541d-438d-b906-074c263bd79b"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And pass a error message back saying that number of bins to add must be a number greater than zero.",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "And pass a error message back saying that number of bins to add must be a number greater than zero.",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "d81a7391-0e9b-4a76-86a8-db7646e98f82"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": [
              {
                "@name": "automation",
                "@value": ""
              },
              {
                "@name": "acceptance",
                "@value": ""
              },
              {
                "@name": "DB",
                "@value": "Validation"
              },
              {
                "@name": "moduleName",
                "@value": "SF"
              },
              {
                "@name": "productName",
                "@value": "MMS"
              },
              {
                "@name": "automatedBy",
                "@value": "BH09098"
              },
              {
                "@name": "id",
                "@value": "SSCS-71-SC03"
              }
            ]
          },
          "scenario": {
            "title": "Verify that user adding less than 1 bin",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC03"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |0   |",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "0"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC03"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room [uri]information is defined",
              "When user passes [user_id], room_id and number of [bins] to add as less than 1 bin",
              "Then the system will not insert any rows into the BIN table",
              "And pass a error message back saying that number of bins to add must be a number greater than zero."
            ]
          }
        }
      ],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "Verify user-id is required to create bins",
        "meta": {
          "properties": [
            {
              "@name": "automation",
              "@value": ""
            },
            {
              "@name": "acceptance",
              "@value": ""
            },
            {
              "@name": "moduleName",
              "@value": "SF"
            },
            {
              "@name": "DB",
              "@value": "Validation"
            },
            {
              "@name": "automatedBy",
              "@value": "BH09098"
            },
            {
              "@name": "productName",
              "@value": "MMS"
            },
            {
              "@name": "id",
              "@value": "SSCS-71-SC04"
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|uri|User_ID|bin|\r\n|http://|abh123|20|",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "uri",
            "User_ID",
            "bin"
          ],
          "data": [
            [
              [
                "uri",
                "http://"
              ],
              [
                "User_ID",
                "abh123"
              ],
              [
                "bin",
                "20"
              ],
              [
                "DB",
                "Validation"
              ],
              [
                "acceptance",
                ""
              ],
              [
                "automatedBy",
                "BH09098"
              ],
              [
                "automation",
                ""
              ],
              [
                "id",
                "SSCS-71-SC04"
              ],
              [
                "moduleName",
                "SF"
              ],
              [
                "productName",
                "MMS"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given a Storage Location room [uri]details is defined",
          "When user doesn't pass a user_id but every other input data [bin]",
          "Then the system will not insert any input data into the BIN table",
          "And pass a error message back saying that user_id is required"
        ]
      },
      "storyPath": "./stories/SSCS71.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "uri",
              "http://"
            ],
            [
              "User_ID",
              "abh123"
            ],
            [
              "bin",
              "20"
            ],
            [
              "DB",
              "Validation"
            ],
            [
              "acceptance",
              ""
            ],
            [
              "automatedBy",
              "BH09098"
            ],
            [
              "automation",
              ""
            ],
            [
              "id",
              "SSCS-71-SC04"
            ],
            [
              "moduleName",
              "SF"
            ],
            [
              "productName",
              "MMS"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given a Storage Location room [uri]details is defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a Storage Location room [uri]details is defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "b85e9641-06f3-4183-b107-975bc0c2dbc6"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When user doesn't pass a user_id but every other input data [bin]",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When user doesn't pass a user_id but every other input data [bin]",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "dd71373a-5f55-46d2-8d95-f75886c4e149"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the system will not insert any input data into the BIN table",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the system will not insert any input data into the BIN table",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "4881dcd7-4da8-41e4-a0f5-2f9eaf3fee6f"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And pass a error message back saying that user_id is required",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "And pass a error message back saying that user_id is required",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "4eda0a0d-ffb3-4184-9ce6-9a1e99767bad"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": [
              {
                "@name": "automation",
                "@value": ""
              },
              {
                "@name": "acceptance",
                "@value": ""
              },
              {
                "@name": "DB",
                "@value": "Validation"
              },
              {
                "@name": "moduleName",
                "@value": "SF"
              },
              {
                "@name": "productName",
                "@value": "MMS"
              },
              {
                "@name": "automatedBy",
                "@value": "BH09098"
              },
              {
                "@name": "id",
                "@value": "SSCS-71-SC04"
              }
            ]
          },
          "scenario": {
            "title": "Verify user-id is required to create bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "DB",
                  "@value": "Validation"
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC04"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bin|\r\n|http://|abh123|20|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bin"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abh123"
                  ],
                  [
                    "bin",
                    "20"
                  ],
                  [
                    "DB",
                    "Validation"
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC04"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room [uri]details is defined",
              "When user doesn't pass a user_id but every other input data [bin]",
              "Then the system will not insert any input data into the BIN table",
              "And pass a error message back saying that user_id is required"
            ]
          }
        }
      ],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "Verifying for invalid room_id",
        "meta": {
          "properties": [
            {
              "@name": "automation",
              "@value": ""
            },
            {
              "@name": "acceptance",
              "@value": ""
            },
            {
              "@name": "moduleName",
              "@value": "SF"
            },
            {
              "@name": "RestAPI",
              "@value": ""
            },
            {
              "@name": "automatedBy",
              "@value": "BH09098"
            },
            {
              "@name": "productName",
              "@value": "MMS"
            },
            {
              "@name": "id",
              "@value": "SSCS-71-SC05"
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|uri|User_ID|bin|\r\n\r\n|http://|abc123 |30|",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "uri",
            "User_ID",
            "bin"
          ],
          "data": [
            [
              [
                "uri",
                "http://"
              ],
              [
                "User_ID",
                "abc123"
              ],
              [
                "bin",
                "30"
              ],
              [
                "RestAPI",
                ""
              ],
              [
                "acceptance",
                ""
              ],
              [
                "automatedBy",
                "BH09098"
              ],
              [
                "automation",
                ""
              ],
              [
                "id",
                "SSCS-71-SC05"
              ],
              [
                "moduleName",
                "SF"
              ],
              [
                "productName",
                "MMS"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given a user storage location[uri] room details",
          "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
          "Then the system will not add any rows into the BIN table",
          "And pass a error message back saying that a valid room_id is required"
        ]
      },
      "storyPath": "./stories/SSCS71.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "uri",
              "http://"
            ],
            [
              "User_ID",
              "abc123"
            ],
            [
              "bin",
              "30"
            ],
            [
              "RestAPI",
              ""
            ],
            [
              "acceptance",
              ""
            ],
            [
              "automatedBy",
              "BH09098"
            ],
            [
              "automation",
              ""
            ],
            [
              "id",
              "SSCS-71-SC05"
            ],
            [
              "moduleName",
              "SF"
            ],
            [
              "productName",
              "MMS"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given a user storage location[uri] room details",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a user storage location[uri] room details",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "a02de12e-5718-4384-b0ea-0d54404cbc4f"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "16a5ba4e-145a-442f-a57b-c728ac309260"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the system will not add any rows into the BIN table",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the system will not add any rows into the BIN table",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "11dda41b-59c2-476b-a74e-9371fe46f8be"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And pass a error message back saying that a valid room_id is required",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "And pass a error message back saying that a valid room_id is required",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "a33da068-e6c9-40c7-82b8-1df2aa6792c9"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": [
              {
                "@name": "automation",
                "@value": ""
              },
              {
                "@name": "acceptance",
                "@value": ""
              },
              {
                "@name": "moduleName",
                "@value": "SF"
              },
              {
                "@name": "RestAPI",
                "@value": ""
              },
              {
                "@name": "productName",
                "@value": "MMS"
              },
              {
                "@name": "automatedBy",
                "@value": "BH09098"
              },
              {
                "@name": "id",
                "@value": "SSCS-71-SC05"
              }
            ]
          },
          "scenario": {
            "title": "Verifying for invalid room_id",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC05"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bin|\r\n\r\n|http://|abc123 |30|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bin"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bin",
                    "30"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC05"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a user storage location[uri] room details",
              "When user doesn't pass a valid room_id  but every other input data [bin],[userid]",
              "Then the system will not add any rows into the BIN table",
              "And pass a error message back saying that a valid room_id is required"
            ]
          }
        }
      ],
      "status": "PENDING"
    },
    {
      "scenario": {
        "title": "Verify by adding more than 100 bins",
        "meta": {
          "properties": [
            {
              "@name": "automation",
              "@value": ""
            },
            {
              "@name": "acceptance",
              "@value": ""
            },
            {
              "@name": "moduleName",
              "@value": "SF"
            },
            {
              "@name": "RestAPI",
              "@value": ""
            },
            {
              "@name": "automatedBy",
              "@value": "BH09098"
            },
            {
              "@name": "productName",
              "@value": "MMS"
            },
            {
              "@name": "id",
              "@value": "SSCS-71-SC06"
            }
          ]
        },
        "givenStories": {
          "givenStories": [],
          "givenStoriesAsString": "",
          "examplesTable": {
            "tableAsString": "",
            "headerSeparator": "|",
            "valueSeparator": "|",
            "ignorableSeparator": "|--",
            "tableTransformers": {
              "transformers": [
                [
                  "FORMATTING",
                  {}
                ],
                [
                  "REPLACING",
                  {}
                ],
                [
                  "FROM_LANDSCAPE",
                  {}
                ]
              ]
            },
            "headers": [],
            "data": [],
            "properties": [
              {
                "@name": "headerSeparator",
                "@value": "|"
              },
              {
                "@name": "valueSeparator",
                "@value": "|"
              },
              {
                "@name": "ignorableSeparator",
                "@value": "|--"
              }
            ],
            "propertiesAsString": "",
            "namedParameters": [],
            "trim": true
          }
        },
        "examplesTable": {
          "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |20|",
          "headerSeparator": "|",
          "valueSeparator": "|",
          "ignorableSeparator": "|--",
          "tableTransformers": {
            "transformers": [
              [
                "FORMATTING",
                {}
              ],
              [
                "REPLACING",
                {}
              ],
              [
                "FROM_LANDSCAPE",
                {}
              ]
            ]
          },
          "headers": [
            "uri",
            "User_ID",
            "bins"
          ],
          "data": [
            [
              [
                "uri",
                "http://"
              ],
              [
                "User_ID",
                "abc123"
              ],
              [
                "bins",
                "20"
              ],
              [
                "RestAPI",
                ""
              ],
              [
                "acceptance",
                ""
              ],
              [
                "automatedBy",
                "BH09098"
              ],
              [
                "automation",
                ""
              ],
              [
                "id",
                "SSCS-71-SC06"
              ],
              [
                "moduleName",
                "SF"
              ],
              [
                "productName",
                "MMS"
              ]
            ]
          ],
          "properties": [
            {
              "@name": "headerSeparator",
              "@value": "|"
            },
            {
              "@name": "valueSeparator",
              "@value": "|"
            },
            {
              "@name": "ignorableSeparator",
              "@value": "|--"
            }
          ],
          "propertiesAsString": "",
          "namedParameters": [],
          "trim": true
        },
        "steps": [
          "Given a Storage Location room[uri] is defined",
          "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
          "Then the system will not insert rows into the BIN table",
          "And pass an error message back saying bins to add can not be greater than 100 bins at a time."
        ]
      },
      "storyPath": "./stories/SSCS71.story",
      "allowed": true,
      "examplePerformableScenarios": [
        {
          "parameters": [
            [
              "uri",
              "http://"
            ],
            [
              "User_ID",
              "abc123"
            ],
            [
              "bins",
              "20"
            ],
            [
              "RestAPI",
              ""
            ],
            [
              "acceptance",
              ""
            ],
            [
              "automatedBy",
              "BH09098"
            ],
            [
              "automation",
              ""
            ],
            [
              "id",
              "SSCS-71-SC06"
            ],
            [
              "moduleName",
              "SF"
            ],
            [
              "productName",
              "MMS"
            ]
          ],
          "givenStories": [],
          "beforeSteps": {
            "matches": []
          },
          "steps": {
            "matches": [],
            "results": [
              {
                "step": "Given a Storage Location room[uri] is defined",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Given a Storage Location room[uri] is defined",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.perform(StepCreator.java:873)",
                    "org.jbehave.core.embedder.PerformableTree$FineSoFar.run(PerformableTree.java:346)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "c0fa4331-883c-48c3-90f9-0002679e927c"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "5a6cf2f2-6f60-44e1-9632-9c0178dacc67"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "Then the system will not insert rows into the BIN table",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "Then the system will not insert rows into the BIN table",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "c9fa5de6-605c-46cf-997b-e277930ad827"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              },
              {
                "step": "And pass an error message back saying bins to add can not be greater than 100 bins at a time.",
                "type": "PENDING",
                "throwable": {
                  "@class": "org.jbehave.core.failures.PendingStepFound",
                  "detailMessage": "And pass an error message back saying bins to add can not be greater than 100 bins at a time.",
                  "stackTrace": [
                    "org.jbehave.core.steps.AbstractStepResult$Pending.<init>(AbstractStepResult.java:58)",
                    "org.jbehave.core.steps.AbstractStepResult.pending(AbstractStepResult.java:192)",
                    "org.jbehave.core.steps.StepCreator$PendingStep.doNotPerform(StepCreator.java:877)",
                    "org.jbehave.core.embedder.PerformableTree$SomethingHappened.run(PerformableTree.java:378)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableSteps.perform(PerformableTree.java:1088)",
                    "org.jbehave.core.embedder.PerformableTree$AbstractPerformableScenario.performRestartableSteps(PerformableTree.java:953)",
                    "org.jbehave.core.embedder.PerformableTree$ExamplePerformableScenario.perform(PerformableTree.java:1027)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableScenario.perform(PerformableTree.java:898)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.performScenarios(PerformableTree.java:825)",
                    "org.jbehave.core.embedder.PerformableTree$PerformableStory.perform(PerformableTree.java:798)",
                    "org.jbehave.core.embedder.PerformableTree.performCancellable(PerformableTree.java:422)",
                    "org.jbehave.core.embedder.PerformableTree.perform(PerformableTree.java:393)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:292)",
                    "org.jbehave.core.embedder.StoryManager$EnqueuedStory.call(StoryManager.java:266)",
                    "java.util.concurrent.FutureTask.run(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)",
                    "java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)",
                    "java.lang.Thread.run(Unknown Source)"
                  ],
                  "suppressedExceptions": [
                    [],
                    []
                  ],
                  "uuid": "7f77ee5d-e174-4c27-a98d-964075f7ca7a"
                },
                "durationInMillis": 0,
                "start": 0,
                "end": 0
              }
            ]
          },
          "afterSteps": {
            "matches": []
          },
          "storyAndScenarioMeta": {
            "properties": [
              {
                "@name": "automation",
                "@value": ""
              },
              {
                "@name": "acceptance",
                "@value": ""
              },
              {
                "@name": "moduleName",
                "@value": "SF"
              },
              {
                "@name": "RestAPI",
                "@value": ""
              },
              {
                "@name": "productName",
                "@value": "MMS"
              },
              {
                "@name": "automatedBy",
                "@value": "BH09098"
              },
              {
                "@name": "id",
                "@value": "SSCS-71-SC06"
              }
            ]
          },
          "scenario": {
            "title": "Verify by adding more than 100 bins",
            "meta": {
              "properties": [
                {
                  "@name": "automation",
                  "@value": ""
                },
                {
                  "@name": "acceptance",
                  "@value": ""
                },
                {
                  "@name": "moduleName",
                  "@value": "SF"
                },
                {
                  "@name": "RestAPI",
                  "@value": ""
                },
                {
                  "@name": "automatedBy",
                  "@value": "BH09098"
                },
                {
                  "@name": "productName",
                  "@value": "MMS"
                },
                {
                  "@name": "id",
                  "@value": "SSCS-71-SC06"
                }
              ]
            },
            "givenStories": {
              "givenStories": [],
              "givenStoriesAsString": "",
              "examplesTable": {
                "tableAsString": "",
                "headerSeparator": "|",
                "valueSeparator": "|",
                "ignorableSeparator": "|--",
                "tableTransformers": {
                  "transformers": [
                    [
                      "FORMATTING",
                      {}
                    ],
                    [
                      "REPLACING",
                      {}
                    ],
                    [
                      "FROM_LANDSCAPE",
                      {}
                    ]
                  ]
                },
                "headers": [],
                "data": [],
                "properties": [
                  {
                    "@name": "headerSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "valueSeparator",
                    "@value": "|"
                  },
                  {
                    "@name": "ignorableSeparator",
                    "@value": "|--"
                  }
                ],
                "propertiesAsString": "",
                "namedParameters": [],
                "trim": true
              }
            },
            "examplesTable": {
              "tableAsString": "|uri|User_ID|bins|\r\n|http://|abc123 |20|",
              "headerSeparator": "|",
              "valueSeparator": "|",
              "ignorableSeparator": "|--",
              "tableTransformers": {
                "transformers": [
                  [
                    "FORMATTING",
                    {}
                  ],
                  [
                    "REPLACING",
                    {}
                  ],
                  [
                    "FROM_LANDSCAPE",
                    {}
                  ]
                ]
              },
              "headers": [
                "uri",
                "User_ID",
                "bins"
              ],
              "data": [
                [
                  [
                    "uri",
                    "http://"
                  ],
                  [
                    "User_ID",
                    "abc123"
                  ],
                  [
                    "bins",
                    "20"
                  ],
                  [
                    "RestAPI",
                    ""
                  ],
                  [
                    "acceptance",
                    ""
                  ],
                  [
                    "automatedBy",
                    "BH09098"
                  ],
                  [
                    "automation",
                    ""
                  ],
                  [
                    "id",
                    "SSCS-71-SC06"
                  ],
                  [
                    "moduleName",
                    "SF"
                  ],
                  [
                    "productName",
                    "MMS"
                  ]
                ]
              ],
              "properties": [
                {
                  "@name": "headerSeparator",
                  "@value": "|"
                },
                {
                  "@name": "valueSeparator",
                  "@value": "|"
                },
                {
                  "@name": "ignorableSeparator",
                  "@value": "|--"
                }
              ],
              "propertiesAsString": "",
              "namedParameters": [],
              "trim": true
            },
            "steps": [
              "Given a Storage Location room[uri] is defined",
              "When user passes [user_id], room_id and number of [bins] to add as more than allowed",
              "Then the system will not insert rows into the BIN table",
              "And pass an error message back saying bins to add can not be greater than 100 bins at a time."
            ]
          }
        }
      ],
      "status": "PENDING"
    }
  ]
}}